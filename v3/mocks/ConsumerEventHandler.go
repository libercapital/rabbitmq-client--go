// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	rabbitmq "gitlab.com/bavatech/architecture/software/libs/go-modules/rabbitmq-client.git/v3"
)

// ConsumerEventHandler is an autogenerated mock type for the ConsumerEventHandler type
type ConsumerEventHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: data
func (_m *ConsumerEventHandler) Execute(data rabbitmq.IncomingEventMessage) bool {
	ret := _m.Called(data)

	var r0 bool
	if rf, ok := ret.Get(0).(func(rabbitmq.IncomingEventMessage) bool); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type NewConsumerEventHandlerT interface {
	mock.TestingT
	Cleanup(func())
}

// NewConsumerEventHandler creates a new instance of ConsumerEventHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConsumerEventHandler(t NewConsumerEventHandlerT) *ConsumerEventHandler {
	mock := &ConsumerEventHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
